-- DROP SCHEMA public CASCADE;
-- CREATE SCHEMA public;

SET search_path = public, medical_appointments_db;
-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.appointment_states
(
    id bigint NOT NULL DEFAULT nextval('appointment_status_id_seq'::regclass),
    status character varying COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT appointment_status_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.appointments
(
    id bigint NOT NULL DEFAULT nextval('appointments_id_seq'::regclass),
    id_doctor integer NOT NULL,
    id_patient integer NOT NULL,
    appointment_date timestamp with time zone NOT NULL,
    id_status_appointment integer DEFAULT 1,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_id_appointment PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.consulting_rooms
(
    id bigint NOT NULL DEFAULT nextval('consulting_rooms_id_seq'::regclass),
    office_code character varying(40) COLLATE pg_catalog."default" NOT NULL,
    id_floor integer,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_id_consulting_room PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.doctors
(
    id bigint NOT NULL DEFAULT nextval('doctors_id_seq'::regclass),
    first_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    email character varying(40) COLLATE pg_catalog."default" NOT NULL,
    id_office_number integer NOT NULL,
    id_speciality integer NOT NULL,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_id_doctor PRIMARY KEY (id),
    CONSTRAINT uk_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.floors
(
    id bigint NOT NULL DEFAULT nextval('floor_id_seq'::regclass),
    level integer NOT NULL,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT floor_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.patients
(
    id bigint NOT NULL DEFAULT nextval('patients_id_seq'::regclass),
    first_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    birth_date timestamp with time zone NOT NULL,
    phone bigint NOT NULL,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT patients_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.specialities
(
    id bigint NOT NULL DEFAULT nextval('specialities_id_seq'::regclass),
    speciality_name character varying(40) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT specialities_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.appointments
    ADD CONSTRAINT fk_appointment_status FOREIGN KEY (id_status_appointment)
    REFERENCES public.appointment_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.appointments
    ADD CONSTRAINT fk_doctor FOREIGN KEY (id_doctor)
    REFERENCES public.doctors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.appointments
    ADD CONSTRAINT fk_patient FOREIGN KEY (id_patient)
    REFERENCES public.patients (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.consulting_rooms
    ADD CONSTRAINT fk_floor FOREIGN KEY (id_floor)
    REFERENCES public.floors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.doctors
    ADD CONSTRAINT fk_office_number FOREIGN KEY (id_office_number)
    REFERENCES public.consulting_rooms (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.doctors
    ADD CONSTRAINT fk_specialities FOREIGN KEY (id_speciality)
    REFERENCES public.specialities (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;